{
	"compilerOptions": {
		"incremental": true /* Enable incremental compilation */,
		"target": "es6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
		"module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* Enable strict null checks. */,
		"strictFunctionTypes": true /* Enable strict checking of function types. */,
		"strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,
		"strictPropertyInitialization": false /* Enable strict checking of property initialization in classes. */,
		"alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
		// "noUnusedLocals": true /* Report errors on unused locals. */,
		// "noUnusedParameters": true /* Report errors on unused parameters. */,
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"types": ["reflect-metadata", "node", "express", "jest"],
		"esModuleInterop": true,
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
		"emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */
	},
	"exclude": ["node_modules", "dist", "tests/*"]
}
